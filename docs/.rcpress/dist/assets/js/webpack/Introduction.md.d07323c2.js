(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{132:function(e,t,a){"use strict";a.r(t),function(e){a.d(t,"default",(function(){return d}));var n,o=a(86),r=(a(127),a(0),a(87));function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}(n="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.enterModule:void 0)&&n(e);"undefined"!=typeof reactHotLoaderGlobal&&reactHotLoaderGlobal.default.signature;var p,i,l={};function d(e){var t=e.components,a=c(e,["components"]);return Object(r.b)("wrapper",b({},l,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{className:"__internal",id:"介绍"},"介绍",Object(r.b)("a",b({parentName:"h2"},{href:"#%E4%BB%8B%E7%BB%8D","aria-hidden":!0,className:"anchor"}),"#")),Object(r.b)("p",null,Object(r.b)("a",b({parentName:"p"},{href:"https://webpack.js.org/",target:"_blank"}),"Webpack")," 通过解决一个基本问题来简化Web开发: 捆绑(",Object(r.b)("inlineCode",{parentName:"p"},"bundling"),")。它接受各种资源, 例如 ",Object(r.b)("inlineCode",{parentName:"p"},"JavaScript"),", ",Object(r.b)("inlineCode",{parentName:"p"},"CSS")," 和 ",Object(r.b)("inlineCode",{parentName:"p"},"HTML"),", 并将其转换为便于通过浏览器使用的格式。做好这一点可以有效减少 ",Object(r.b)("inlineCode",{parentName:"p"},"Web")," 开发的痛苦。"),Object(r.b)("p",null,"由于其配置驱动的方法, 它不是最易学的工具, 但它功能十分强大。本指南的目的是帮助您开始使用 ",Object(r.b)("inlineCode",{parentName:"p"},"Webpack")," 并超越基础知识。"),Object(r.b)("h3",{className:"__internal",id:"什么是-webpack"},"什么是 Webpack",Object(r.b)("a",b({parentName:"h3"},{href:"#%E4%BB%80%E4%B9%88%E6%98%AF-webpack","aria-hidden":!0,className:"anchor"}),"#")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Web")," 浏览器使用 ",Object(r.b)("inlineCode",{parentName:"p"},"HTML"),", ",Object(r.b)("inlineCode",{parentName:"p"},"CSS"),", ",Object(r.b)("inlineCode",{parentName:"p"},"JavaScript")," 和多媒体文件。随着项目的发展, 跟踪所有这些文件并使它们适应不同的目标（例如浏览器）变得非常困难, 以至于不借助其他工具就无法管理。",Object(r.b)("inlineCode",{parentName:"p"},"Webpack")," 解决了这些问题。管理复杂性是 ",Object(r.b)("inlineCode",{parentName:"p"},"Web")," 开发的基本问题之一, 而合理的解决此问题将为开发提供极大帮助。"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"Webpack")," 不是唯一可用的捆绑程序, 并且出现了许多不同的工具。任务执行者（例如Grunt和Gulp）是高级工具的很好的例子。通常，问题在于您需要手动编写工作流程。将问题推送到诸如webpack的捆绑器是向前迈出的一步。"),Object(r.b)("p",null,"特定于框架的抽象（例如create-react-app或@ angular / cli）在下面使用webpack。也就是说，如果您必须自定义设置，那么了解该工具仍然有价值。"))}d.isMDXComponent=!0,d=Object(o.hot)(e)(d),(p="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.default:void 0)&&(p.register(l,"layoutProps","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Introduction.md"),p.register("wrapper","MDXLayout","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Introduction.md"),p.register(d,"MDXContent","/Users/yuzhoujie/Desktop/work/webpack-book-china/docs/webpack/Introduction.md")),(i="undefined"!=typeof reactHotLoaderGlobal?reactHotLoaderGlobal.leaveModule:void 0)&&i(e)}.call(this,a(21)(e))}}]);